{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Tarefa 02 Módulo 05\n",
    "\n",
    "O nosso projeto desta sequência de módulos do curso será um aprofundamento da demonstração sobre classificação de risco de crédito que vimos lá no comecinho. Pois recebemos uma base já montada pra nós. Tenha certeza de que ela passou por um longo processamento até ficar daquele jeito. Neste exercício vamos exercitar o que aprendemos nas ultimas aulas e montar a variável resposta da base do nosso projeto.\n",
    "\n",
    "#### Marcação de bom e mau\n",
    "O objetivo da modelagem é classificar o risco de inadimplência, ou como se diz no meio, o risco de *default*. Podemos fazer longas discussões sobre o conceito de *default* com base em estudos e exigências regulatórias, para efeitos deste estudo, um cliente em *default* é aquele que está em 60 dias de atraso ou mais. Então classificaremos os clientes como 'bons' e 'maus' assim:\n",
    "- **Maus** pagadores: são aqueles que entraram em 'default' (atraso 60 dias ou mais) nos 24 meses seguintes à aquisição do cartão de crédito. \n",
    "- **Bons** pagadores: são considerados todos os demais.\n",
    "- **Excluídos**: Clientes que não adquiriram um cartão de crédito (seja por recusa, seja por desistência) não possuem informações de pagamento, portanto não se pode identificar se são bons ou maus. Há uma longa discussão e literatura sobre *inferência de rejeitados* que está fora do escopo deste exercício.\n",
    "\n",
    "#### Bases disponíveis\n",
    "Temos duas bases importantes aqui: uma de propostas, com diversas informações dos vários solicitantes de cartão de crédito, e uma base de pagamentos. A base de pagamentos será utilizada para identificar a ocorrência de *default*. A base de propostas tem diversas informações coletadas no momento da solicitação do crédito (isto é importante: qualquer informação posterior a essa data é impossível de ser coletada na aplicação do modelo e não pode ser utilizada).\n",
    "\n",
    "As variáveis delas são:\n",
    "\n",
    "Base de propostas - application_records.csv\n",
    "\n",
    "| Nome da Variável         | Description                                         | Tipo  |\n",
    "| ------------------------ |:---------------------------------------------------:| -----:|\n",
    "| ID| identificador do cliente (chave) |inteiro|\n",
    "| CODE_GENDER| M = 'Masculino'; F = 'Feminino' |M/F|\n",
    "| FLAG_OWN_CAR| Y = 'possui'; N = 'não possui' |Y/N|\n",
    "| FLAG_OWN_REALTY| Y = 'possui'; N = 'não possui' |Y/N|\n",
    "| CNT_CHILDREN| Quantidade de filhos |inteiro|\n",
    "| AMT_INCOME_TOTAL| Annual income |inteiro|\n",
    "| NAME_INCOME_TYPE|Tipo de renda (ex: assaliariado, autônomo etc) | texto |\n",
    "| NAME_EDUCATION_TYPE| Nível de educação (ex: secundário, superior etc) |texto|\n",
    "| NAME_FAMILY_STATUS | Estado civil (ex: solteiro, casado etc)| texto |\n",
    "| NAME_HOUSING_TYPE | tipo de residência (ex: casa/apartamento, com os pais etc) | texto |\n",
    "| DAYS_BIRTH | Count backwards from current day (0), -1 means yesterday |inteiro|\n",
    "| DAYS_EMPLOYED | Count backwards from current day (0), -1 means yesterday |inteiro|\n",
    "| FLAG_MOBIL | Indica se possui celular (1 = sim, 0 = não) |binária|\n",
    "| FLAG_WORK_PHONE | Indica se possui telefone comercial (1 = sim, 0 = não) |binária|\n",
    "| FLAG_PHONE | Indica se possui telefone (1 = sim, 0 = não) |binária|\n",
    "| FLAG_EMAIL | Indica se possui e-mail (1 = sim, 0 = não) |binária|\n",
    "| OCCUPATION_TYPE | Occupation\t |Qualitativa|\n",
    "| CNT_FAM_MEMBERS | quantidade de pessoas na residência |inteiro|\n",
    "\n",
    "Base de pagamentos - pagamentos_largo.csv  \n",
    "\n",
    "| Nome da Variável         | Description                                         | Tipo  |\n",
    "| ------------------------ |:---------------------------------------------------:| -----:|\n",
    "| ID| identificador do cliente (chave) |inteiro|\n",
    "| mes_00 a mes_24| faixa de atraso mês a mês do cliente <br>0: 1-29 days past due &nbsp;&nbsp;&nbsp;&nbsp; 1: 30-59 days past due <br />2: 60-89 days overdue &nbsp;&nbsp;&nbsp;&nbsp; 3: 90-119 days overdue <br /> 4: 120-149 days overdue &nbsp;&nbsp;&nbsp;&nbsp; 5: more than 150 days <br />C: paid off that month &nbsp;&nbsp;&nbsp;&nbsp; X: No loan for the month |Qualitativa|\n",
    "\n",
    "#### Construindo a variável resposta\n",
    "A base de pagamentos está em um formato de 'base larga'. Essa base possui informações de pagamentos do cliente mês a mês a partir do mês de aquisição do crédito (mês 0) até o vigésimo quarto mês após a aquisição do crédito (mês 24). Utilizaremos essa base para determinar se um proponente é considerado 'bom pagador' ou caso apresente atraso representativo, será considerado 'mau pagador'.\n",
    "\n",
    "#### Base larga vs base longa\n",
    "A base ser larga significa que há uma linha para cada cliente, e que as informações estarão nas colunas, em contraste com a 'base longa', em que haveria uma linha para cada combinação cliente/mês, uma coluna indicando o cliente, outra indicando o mês, e apenas uma coluna com a informação do atraso.\n",
    "\n",
    "#### Tarefa 1) Marcar *default* no mês\n",
    "Faça uma indicadora de se o cliente está em *default* em cada uma das marcações (mes_00 a mes_24). Dica: você pode utilizar o método ```.isin()``` do Pandas. Consulte a [documentação](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.isin.html) caso necessário.\n",
    "\n",
    "#### Tarefa 2) 'bons' e 'maus' ao longo de todos os 24 meses de desempenho\n",
    "Marque para cada cliente se ele teve pelo menos um episódio de *default* entre o mês 0 e o mês 24. Dica: o método ```sum()``` pode ajudar. Caso precise, consulte a [documentação](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.sum.html) e procure pelo argumento ```axis```, você viu outros métodos que possuem esse argumento também. Tendo o número de meses em default de cada cliente, basta marcar ```True``` para todos aqueles que possuem pelo menos 1 mês em *default* e ```False``` para os demais.\n",
    "\n",
    "#### Tarefa 3) Marcando proponentes expostos ao risco de crédito\n",
    "Marcando proponentes que se tornaram tomadores: lembre-se de que clientes que não adquiriram o cartão devem ser desconsiderados. A base de pagamentos possui apenas clientes que adquiriram cartão de crédito, então você pode selecionar somente os clientes da base de propostas que se encontram na base de pagamentos.\n",
    "\n",
    "#### Tarefa 4) Consolidando as informações\n",
    "Faça uma junção das informações da base de propostas com a variável de *default* que você acabou de construir. Talvez você consiga realizar a tarefa 3 e tarefa 4 em uma única linha de código ;)\n",
    "\n",
    "#### Tarefa 5) Verificando\n",
    "Faça uma contagem dos valores do *default* que você construiu. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-18T13:32:12.437210Z",
     "iopub.status.busy": "2024-07-18T13:32:12.436820Z",
     "iopub.status.idle": "2024-07-18T13:32:12.442680Z",
     "shell.execute_reply": "2024-07-18T13:32:12.441302Z",
     "shell.execute_reply.started": "2024-07-18T13:32:12.437180Z"
    }
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-18T13:32:14.474629Z",
     "iopub.status.busy": "2024-07-18T13:32:14.474198Z",
     "iopub.status.idle": "2024-07-18T13:32:15.785025Z",
     "shell.execute_reply": "2024-07-18T13:32:15.783883Z",
     "shell.execute_reply.started": "2024-07-18T13:32:14.474594Z"
    }
   },
   "outputs": [],
   "source": [
    "propostas = pd.read_csv('application_record.csv')\n",
    "pg = pd.read_csv('pagamentos_largo.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-18T13:32:16.405937Z",
     "iopub.status.busy": "2024-07-18T13:32:16.405565Z",
     "iopub.status.idle": "2024-07-18T13:32:16.434741Z",
     "shell.execute_reply": "2024-07-18T13:32:16.433177Z",
     "shell.execute_reply.started": "2024-07-18T13:32:16.405906Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>mes_0</th>\n",
       "      <th>mes_1</th>\n",
       "      <th>mes_10</th>\n",
       "      <th>mes_11</th>\n",
       "      <th>mes_12</th>\n",
       "      <th>mes_13</th>\n",
       "      <th>mes_14</th>\n",
       "      <th>mes_15</th>\n",
       "      <th>mes_16</th>\n",
       "      <th>...</th>\n",
       "      <th>mes_22</th>\n",
       "      <th>mes_23</th>\n",
       "      <th>mes_24</th>\n",
       "      <th>mes_3</th>\n",
       "      <th>mes_4</th>\n",
       "      <th>mes_5</th>\n",
       "      <th>mes_6</th>\n",
       "      <th>mes_7</th>\n",
       "      <th>mes_8</th>\n",
       "      <th>mes_9</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5001718</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5001719</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>...</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5001720</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5001723</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5001726</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>...</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        ID mes_0 mes_1 mes_10 mes_11 mes_12 mes_13 mes_14 mes_15 mes_16  ...  \\\n",
       "0  5001718     0     0      0      0      0      0      0      0    NaN  ...   \n",
       "1  5001719     0     0      C      C      C      C      C      C      C  ...   \n",
       "2  5001720     0     0      0      0      0      0      0      0      0  ...   \n",
       "3  5001723     0     0    NaN    NaN    NaN    NaN    NaN    NaN    NaN  ...   \n",
       "4  5001726     0     0      C      C      C      C      C      C      C  ...   \n",
       "\n",
       "  mes_22 mes_23 mes_24 mes_3 mes_4 mes_5 mes_6 mes_7 mes_8 mes_9  \n",
       "0    NaN      0    NaN     0     0     0     0   NaN     0   NaN  \n",
       "1      C      C      C     C     C     C     C     C     C     C  \n",
       "2      1      0      0     0     0     0     0     0     0     0  \n",
       "3    NaN    NaN    NaN     0     0     0     0     0   NaN   NaN  \n",
       "4      C      C      C     0     0     0     C     C     C     C  \n",
       "\n",
       "[5 rows x 26 columns]"
      ]
     },
     "execution_count": 136,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pg.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-18T13:32:19.198713Z",
     "iopub.status.busy": "2024-07-18T13:32:19.198262Z",
     "iopub.status.idle": "2024-07-18T13:32:19.207533Z",
     "shell.execute_reply": "2024-07-18T13:32:19.205977Z",
     "shell.execute_reply.started": "2024-07-18T13:32:19.198679Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(20937, 26)"
      ]
     },
     "execution_count": 137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#verificando a estrutura de linhas e colunas do dataFrame\n",
    "pg.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-18T13:32:21.317537Z",
     "iopub.status.busy": "2024-07-18T13:32:21.317098Z",
     "iopub.status.idle": "2024-07-18T13:32:21.458293Z",
     "shell.execute_reply": "2024-07-18T13:32:21.457012Z",
     "shell.execute_reply.started": "2024-07-18T13:32:21.317500Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>mes_0</th>\n",
       "      <th>mes_1</th>\n",
       "      <th>mes_10</th>\n",
       "      <th>mes_11</th>\n",
       "      <th>mes_12</th>\n",
       "      <th>mes_13</th>\n",
       "      <th>mes_14</th>\n",
       "      <th>mes_15</th>\n",
       "      <th>mes_16</th>\n",
       "      <th>...</th>\n",
       "      <th>mes_22</th>\n",
       "      <th>mes_23</th>\n",
       "      <th>mes_24</th>\n",
       "      <th>mes_3</th>\n",
       "      <th>mes_4</th>\n",
       "      <th>mes_5</th>\n",
       "      <th>mes_6</th>\n",
       "      <th>mes_7</th>\n",
       "      <th>mes_8</th>\n",
       "      <th>mes_9</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5001718</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5001719</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>...</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5001720</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5001723</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5001726</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>...</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20932</th>\n",
       "      <td>5150475</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>...</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20933</th>\n",
       "      <td>5150476</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20934</th>\n",
       "      <td>5150480</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>...</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20935</th>\n",
       "      <td>5150482</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20936</th>\n",
       "      <td>5150487</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>...</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>20937 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            ID mes_0 mes_1 mes_10 mes_11 mes_12 mes_13 mes_14 mes_15 mes_16  \\\n",
       "0      5001718     0     0      0      0      0      0      0      0    NaN   \n",
       "1      5001719     0     0      C      C      C      C      C      C      C   \n",
       "2      5001720     0     0      0      0      0      0      0      0      0   \n",
       "3      5001723     0     0    NaN    NaN    NaN    NaN    NaN    NaN    NaN   \n",
       "4      5001726     0     0      C      C      C      C      C      C      C   \n",
       "...        ...   ...   ...    ...    ...    ...    ...    ...    ...    ...   \n",
       "20932  5150475     C     C      C      C      C      C      C      C      C   \n",
       "20933  5150476     0     0      0      0      0      0      0      0      0   \n",
       "20934  5150480     0     0      C      C      C      C      C      C      C   \n",
       "20935  5150482     0     0      0      0      C      C      C      C      C   \n",
       "20936  5150487     C     C      C      C      C      C      C      C      C   \n",
       "\n",
       "       ... mes_22 mes_23 mes_24 mes_3 mes_4 mes_5 mes_6 mes_7 mes_8 mes_9  \n",
       "0      ...    NaN      0    NaN     0     0     0     0   NaN     0   NaN  \n",
       "1      ...      C      C      C     C     C     C     C     C     C     C  \n",
       "2      ...      1      0      0     0     0     0     0     0     0     0  \n",
       "3      ...    NaN    NaN    NaN     0     0     0     0     0   NaN   NaN  \n",
       "4      ...      C      C      C     0     0     0     C     C     C     C  \n",
       "...    ...    ...    ...    ...   ...   ...   ...   ...   ...   ...   ...  \n",
       "20932  ...      C      C      C     C     C     C     C     C     C     C  \n",
       "20933  ...    NaN    NaN    NaN     0     0     0     0     0     0     0  \n",
       "20934  ...      C      C      C     0     0     0     C     C     C     C  \n",
       "20935  ...    NaN    NaN    NaN     0     0     0     0     0     0     0  \n",
       "20936  ...      C      C      C     C     C     C     C     C     C     C  \n",
       "\n",
       "[20937 rows x 26 columns]"
      ]
     },
     "execution_count": 138,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pg.drop_duplicates()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-18T13:18:39.119136Z",
     "iopub.status.busy": "2024-07-18T13:18:39.118602Z",
     "iopub.status.idle": "2024-07-18T13:18:39.129002Z",
     "shell.execute_reply": "2024-07-18T13:18:39.127394Z",
     "shell.execute_reply.started": "2024-07-18T13:18:39.119098Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(20937, 26)"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pg.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-18T13:18:41.319167Z",
     "iopub.status.busy": "2024-07-18T13:18:41.318724Z",
     "iopub.status.idle": "2024-07-18T13:18:41.379797Z",
     "shell.execute_reply": "2024-07-18T13:18:41.378596Z",
     "shell.execute_reply.started": "2024-07-18T13:18:41.319132Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ID           0\n",
       "mes_0        0\n",
       "mes_1     1721\n",
       "mes_10    3482\n",
       "mes_11    3965\n",
       "mes_12    3994\n",
       "mes_13    4397\n",
       "mes_14    4412\n",
       "mes_15    4782\n",
       "mes_16    4844\n",
       "mes_17    5026\n",
       "mes_18    5307\n",
       "mes_19    5601\n",
       "mes_2     1589\n",
       "mes_20    5753\n",
       "mes_21    5861\n",
       "mes_22    6140\n",
       "mes_23    6339\n",
       "mes_24    6504\n",
       "mes_3     2012\n",
       "mes_4     2135\n",
       "mes_5     2425\n",
       "mes_6     2723\n",
       "mes_7     3175\n",
       "mes_8     3196\n",
       "mes_9     3427\n",
       "dtype: int64"
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 1) verificando dados faltantes\n",
    "pg.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-18T13:18:44.186487Z",
     "iopub.status.busy": "2024-07-18T13:18:44.186085Z",
     "iopub.status.idle": "2024-07-18T13:18:44.209376Z",
     "shell.execute_reply": "2024-07-18T13:18:44.208168Z",
     "shell.execute_reply.started": "2024-07-18T13:18:44.186454Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>CODE_GENDER</th>\n",
       "      <th>FLAG_OWN_CAR</th>\n",
       "      <th>FLAG_OWN_REALTY</th>\n",
       "      <th>CNT_CHILDREN</th>\n",
       "      <th>AMT_INCOME_TOTAL</th>\n",
       "      <th>NAME_INCOME_TYPE</th>\n",
       "      <th>NAME_EDUCATION_TYPE</th>\n",
       "      <th>NAME_FAMILY_STATUS</th>\n",
       "      <th>NAME_HOUSING_TYPE</th>\n",
       "      <th>DAYS_BIRTH</th>\n",
       "      <th>DAYS_EMPLOYED</th>\n",
       "      <th>FLAG_MOBIL</th>\n",
       "      <th>FLAG_WORK_PHONE</th>\n",
       "      <th>FLAG_PHONE</th>\n",
       "      <th>FLAG_EMAIL</th>\n",
       "      <th>OCCUPATION_TYPE</th>\n",
       "      <th>CNT_FAM_MEMBERS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5008804</td>\n",
       "      <td>M</td>\n",
       "      <td>Y</td>\n",
       "      <td>Y</td>\n",
       "      <td>0</td>\n",
       "      <td>427500.0</td>\n",
       "      <td>Working</td>\n",
       "      <td>Higher education</td>\n",
       "      <td>Civil marriage</td>\n",
       "      <td>Rented apartment</td>\n",
       "      <td>-12005</td>\n",
       "      <td>-4542</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5008805</td>\n",
       "      <td>M</td>\n",
       "      <td>Y</td>\n",
       "      <td>Y</td>\n",
       "      <td>0</td>\n",
       "      <td>427500.0</td>\n",
       "      <td>Working</td>\n",
       "      <td>Higher education</td>\n",
       "      <td>Civil marriage</td>\n",
       "      <td>Rented apartment</td>\n",
       "      <td>-12005</td>\n",
       "      <td>-4542</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5008806</td>\n",
       "      <td>M</td>\n",
       "      <td>Y</td>\n",
       "      <td>Y</td>\n",
       "      <td>0</td>\n",
       "      <td>112500.0</td>\n",
       "      <td>Working</td>\n",
       "      <td>Secondary / secondary special</td>\n",
       "      <td>Married</td>\n",
       "      <td>House / apartment</td>\n",
       "      <td>-21474</td>\n",
       "      <td>-1134</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Security staff</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5008808</td>\n",
       "      <td>F</td>\n",
       "      <td>N</td>\n",
       "      <td>Y</td>\n",
       "      <td>0</td>\n",
       "      <td>270000.0</td>\n",
       "      <td>Commercial associate</td>\n",
       "      <td>Secondary / secondary special</td>\n",
       "      <td>Single / not married</td>\n",
       "      <td>House / apartment</td>\n",
       "      <td>-19110</td>\n",
       "      <td>-3051</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sales staff</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5008809</td>\n",
       "      <td>F</td>\n",
       "      <td>N</td>\n",
       "      <td>Y</td>\n",
       "      <td>0</td>\n",
       "      <td>270000.0</td>\n",
       "      <td>Commercial associate</td>\n",
       "      <td>Secondary / secondary special</td>\n",
       "      <td>Single / not married</td>\n",
       "      <td>House / apartment</td>\n",
       "      <td>-19110</td>\n",
       "      <td>-3051</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sales staff</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        ID CODE_GENDER FLAG_OWN_CAR FLAG_OWN_REALTY  CNT_CHILDREN  \\\n",
       "0  5008804           M            Y               Y             0   \n",
       "1  5008805           M            Y               Y             0   \n",
       "2  5008806           M            Y               Y             0   \n",
       "3  5008808           F            N               Y             0   \n",
       "4  5008809           F            N               Y             0   \n",
       "\n",
       "   AMT_INCOME_TOTAL      NAME_INCOME_TYPE            NAME_EDUCATION_TYPE  \\\n",
       "0          427500.0               Working               Higher education   \n",
       "1          427500.0               Working               Higher education   \n",
       "2          112500.0               Working  Secondary / secondary special   \n",
       "3          270000.0  Commercial associate  Secondary / secondary special   \n",
       "4          270000.0  Commercial associate  Secondary / secondary special   \n",
       "\n",
       "     NAME_FAMILY_STATUS  NAME_HOUSING_TYPE  DAYS_BIRTH  DAYS_EMPLOYED  \\\n",
       "0        Civil marriage   Rented apartment      -12005          -4542   \n",
       "1        Civil marriage   Rented apartment      -12005          -4542   \n",
       "2               Married  House / apartment      -21474          -1134   \n",
       "3  Single / not married  House / apartment      -19110          -3051   \n",
       "4  Single / not married  House / apartment      -19110          -3051   \n",
       "\n",
       "   FLAG_MOBIL  FLAG_WORK_PHONE  FLAG_PHONE  FLAG_EMAIL OCCUPATION_TYPE  \\\n",
       "0           1                1           0           0             NaN   \n",
       "1           1                1           0           0             NaN   \n",
       "2           1                0           0           0  Security staff   \n",
       "3           1                0           1           1     Sales staff   \n",
       "4           1                0           1           1     Sales staff   \n",
       "\n",
       "   CNT_FAM_MEMBERS  \n",
       "0              2.0  \n",
       "1              2.0  \n",
       "2              2.0  \n",
       "3              1.0  \n",
       "4              1.0  "
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#checando a base de dados 'propostas'\n",
    "propostas.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-18T13:23:09.111256Z",
     "iopub.status.busy": "2024-07-18T13:23:09.110822Z",
     "iopub.status.idle": "2024-07-18T13:23:09.118336Z",
     "shell.execute_reply": "2024-07-18T13:23:09.117141Z",
     "shell.execute_reply.started": "2024-07-18T13:23:09.111219Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(438557, 18)"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "propostas.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-18T13:32:27.027732Z",
     "iopub.status.busy": "2024-07-18T13:32:27.026517Z",
     "iopub.status.idle": "2024-07-18T13:32:27.127921Z",
     "shell.execute_reply": "2024-07-18T13:32:27.125658Z",
     "shell.execute_reply.started": "2024-07-18T13:32:27.027680Z"
    }
   },
   "outputs": [],
   "source": [
    "#criando colunas com os valores default\n",
    "pg.loc[pg['mes_0'].isin(['0','1','C']), 'default_mes0']  = 0\n",
    "pg.loc[pg['mes_0'].isin(['2','3','4','5']), 'default_mes0']  = 1\n",
    "pg.loc[pg['mes_1'].isin(['0','1','C']), 'default_mes1']  = 0\n",
    "pg.loc[pg['mes_1'].isin(['2','3','4','5']), 'default_mes1']  = 1\n",
    "pg.loc[pg['mes_2'].isin(['0','1','C']), 'default_mes2']  = 0\n",
    "pg.loc[pg['mes_2'].isin(['2','3','4','5']), 'default_mes2']  = 1\n",
    "pg.loc[pg['mes_3'].isin(['0','1','C']), 'default_mes3']  = 0\n",
    "pg.loc[pg['mes_3'].isin(['2','3','4','5']), 'default_mes3']  = 1\n",
    "pg.loc[pg['mes_4'].isin(['0','1','C']), 'default_mes4']  = 0\n",
    "pg.loc[pg['mes_4'].isin(['2','3','4','5']), 'default_mes4']  = 1\n",
    "pg.loc[pg['mes_5'].isin(['0','1','C']), 'default_mes5']  = 0\n",
    "pg.loc[pg['mes_5'].isin(['2','3','4','5']), 'default_mes5']  = 1\n",
    "pg.loc[pg['mes_6'].isin(['0','1','C']), 'default_mes6']  = 0\n",
    "pg.loc[pg['mes_6'].isin(['2','3','4','5']), 'default_mes6']  = 1\n",
    "pg.loc[pg['mes_7'].isin(['0','1','C']), 'default_mes7']  = 0\n",
    "pg.loc[pg['mes_7'].isin(['2','3','4','5']), 'default_mes7']  = 1\n",
    "pg.loc[pg['mes_8'].isin(['0','1','C']), 'default_mes8']  = 0\n",
    "pg.loc[pg['mes_8'].isin(['2','3','4','5']), 'default_mes8']  = 1\n",
    "pg.loc[pg['mes_9'].isin(['0','1','C']), 'default_mes9']  = 0\n",
    "pg.loc[pg['mes_9'].isin(['2','3','4','5']), 'default_mes9']  = 1\n",
    "pg.loc[pg['mes_10'].isin(['0','1','C']), 'default_mes10']  = 0\n",
    "pg.loc[pg['mes_10'].isin(['2','3','4','5']), 'default_mes10']  = 1\n",
    "pg.loc[pg['mes_11'].isin(['0','1','C']), 'default_mes11']  = 0\n",
    "pg.loc[pg['mes_11'].isin(['2','3','4','5']), 'default_mes11']  = 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-18T13:32:30.035484Z",
     "iopub.status.busy": "2024-07-18T13:32:30.034921Z",
     "iopub.status.idle": "2024-07-18T13:32:30.133031Z",
     "shell.execute_reply": "2024-07-18T13:32:30.131677Z",
     "shell.execute_reply.started": "2024-07-18T13:32:30.035439Z"
    }
   },
   "outputs": [],
   "source": [
    "pg.loc[pg['mes_12'].isin(['0','1','C']), 'default_mes12']  = 0\n",
    "pg.loc[pg['mes_12'].isin(['2','3','4','5']), 'default_mes12']  = 1\n",
    "pg.loc[pg['mes_13'].isin(['0','1','C']), 'default_mes13']  = 0\n",
    "pg.loc[pg['mes_13'].isin(['2','3','4','5']), 'default_mes13']  = 1\n",
    "pg.loc[pg['mes_14'].isin(['0','1','C']), 'default_mes14']  = 0\n",
    "pg.loc[pg['mes_14'].isin(['2','3','4','5']), 'default_mes14']  = 1\n",
    "pg.loc[pg['mes_15'].isin(['0','1','C']), 'default_mes15']  = 0\n",
    "pg.loc[pg['mes_15'].isin(['2','3','4','5']), 'default_mes15']  = 1\n",
    "pg.loc[pg['mes_16'].isin(['0','1','C']), 'default_mes16']  = 0\n",
    "pg.loc[pg['mes_16'].isin(['2','3','4','5']), 'default_mes16']  = 1\n",
    "pg.loc[pg['mes_17'].isin(['0','1','C']), 'default_mes17']  = 0\n",
    "pg.loc[pg['mes_17'].isin(['2','3','4','5']), 'default_mes17']  = 1\n",
    "pg.loc[pg['mes_18'].isin(['0','1','C']), 'default_mes18']  = 0\n",
    "pg.loc[pg['mes_18'].isin(['2','3','4','5']), 'default_mes18']  = 1\n",
    "pg.loc[pg['mes_19'].isin(['0','1','C']), 'default_mes19']  = 0\n",
    "pg.loc[pg['mes_19'].isin(['2','3','4','5']), 'default_mes19']  = 1\n",
    "pg.loc[pg['mes_20'].isin(['0','1','C']), 'default_mes20']  = 0\n",
    "pg.loc[pg['mes_20'].isin(['2','3','4','5']), 'default_mes20']  = 1\n",
    "pg.loc[pg['mes_21'].isin(['0','1','C']), 'default_mes21']  = 0\n",
    "pg.loc[pg['mes_21'].isin(['2','3','4','5']), 'default_mes21']  = 1\n",
    "pg.loc[pg['mes_22'].isin(['0','1','C']), 'default_mes22']  = 0\n",
    "pg.loc[pg['mes_22'].isin(['2','3','4','5']), 'default_mes22']  = 1\n",
    "pg.loc[pg['mes_23'].isin(['0','1','C']), 'default_mes23']  = 0\n",
    "pg.loc[pg['mes_23'].isin(['2','3','4','5']), 'default_mes23']  = 1\n",
    "pg.loc[pg['mes_24'].isin(['0','1','C']), 'default_mes24']  = 0\n",
    "pg.loc[pg['mes_24'].isin(['2','3','4','5']), 'default_mes24']  = 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-18T13:32:33.083826Z",
     "iopub.status.busy": "2024-07-18T13:32:33.083431Z",
     "iopub.status.idle": "2024-07-18T13:32:33.092231Z",
     "shell.execute_reply": "2024-07-18T13:32:33.090836Z",
     "shell.execute_reply.started": "2024-07-18T13:32:33.083794Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['ID', 'mes_0', 'mes_1', 'mes_10', 'mes_11', 'mes_12', 'mes_13',\n",
       "       'mes_14', 'mes_15', 'mes_16', 'mes_17', 'mes_18', 'mes_19', 'mes_2',\n",
       "       'mes_20', 'mes_21', 'mes_22', 'mes_23', 'mes_24', 'mes_3', 'mes_4',\n",
       "       'mes_5', 'mes_6', 'mes_7', 'mes_8', 'mes_9', 'default_mes0',\n",
       "       'default_mes1', 'default_mes2', 'default_mes3', 'default_mes4',\n",
       "       'default_mes5', 'default_mes6', 'default_mes7', 'default_mes8',\n",
       "       'default_mes9', 'default_mes10', 'default_mes11', 'default_mes12',\n",
       "       'default_mes13', 'default_mes14', 'default_mes15', 'default_mes16',\n",
       "       'default_mes17', 'default_mes18', 'default_mes19', 'default_mes20',\n",
       "       'default_mes21', 'default_mes22', 'default_mes23', 'default_mes24'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 141,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pg.columns\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-18T13:32:35.289842Z",
     "iopub.status.busy": "2024-07-18T13:32:35.289429Z",
     "iopub.status.idle": "2024-07-18T13:32:35.300379Z",
     "shell.execute_reply": "2024-07-18T13:32:35.299135Z",
     "shell.execute_reply.started": "2024-07-18T13:32:35.289808Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ID                 int64\n",
       "mes_0             object\n",
       "mes_1             object\n",
       "mes_10            object\n",
       "mes_11            object\n",
       "mes_12            object\n",
       "mes_13            object\n",
       "mes_14            object\n",
       "mes_15            object\n",
       "mes_16            object\n",
       "mes_17            object\n",
       "mes_18            object\n",
       "mes_19            object\n",
       "mes_2             object\n",
       "mes_20            object\n",
       "mes_21            object\n",
       "mes_22            object\n",
       "mes_23            object\n",
       "mes_24            object\n",
       "mes_3             object\n",
       "mes_4             object\n",
       "mes_5             object\n",
       "mes_6             object\n",
       "mes_7             object\n",
       "mes_8             object\n",
       "mes_9             object\n",
       "default_mes0     float64\n",
       "default_mes1     float64\n",
       "default_mes2     float64\n",
       "default_mes3     float64\n",
       "default_mes4     float64\n",
       "default_mes5     float64\n",
       "default_mes6     float64\n",
       "default_mes7     float64\n",
       "default_mes8     float64\n",
       "default_mes9     float64\n",
       "default_mes10    float64\n",
       "default_mes11    float64\n",
       "default_mes12    float64\n",
       "default_mes13    float64\n",
       "default_mes14    float64\n",
       "default_mes15    float64\n",
       "default_mes16    float64\n",
       "default_mes17    float64\n",
       "default_mes18    float64\n",
       "default_mes19    float64\n",
       "default_mes20    float64\n",
       "default_mes21    float64\n",
       "default_mes22    float64\n",
       "default_mes23    float64\n",
       "default_mes24    float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 142,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pg.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-18T13:32:38.348467Z",
     "iopub.status.busy": "2024-07-18T13:32:38.348028Z",
     "iopub.status.idle": "2024-07-18T13:32:38.383372Z",
     "shell.execute_reply": "2024-07-18T13:32:38.382237Z",
     "shell.execute_reply.started": "2024-07-18T13:32:38.348431Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>mes_0</th>\n",
       "      <th>mes_1</th>\n",
       "      <th>mes_10</th>\n",
       "      <th>mes_11</th>\n",
       "      <th>mes_12</th>\n",
       "      <th>mes_13</th>\n",
       "      <th>mes_14</th>\n",
       "      <th>mes_15</th>\n",
       "      <th>mes_16</th>\n",
       "      <th>...</th>\n",
       "      <th>default_mes15</th>\n",
       "      <th>default_mes16</th>\n",
       "      <th>default_mes17</th>\n",
       "      <th>default_mes18</th>\n",
       "      <th>default_mes19</th>\n",
       "      <th>default_mes20</th>\n",
       "      <th>default_mes21</th>\n",
       "      <th>default_mes22</th>\n",
       "      <th>default_mes23</th>\n",
       "      <th>default_mes24</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5001718</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5001719</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5001720</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5001723</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5001726</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 51 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        ID mes_0 mes_1 mes_10 mes_11 mes_12 mes_13 mes_14 mes_15 mes_16  ...  \\\n",
       "0  5001718     0     0      0      0      0      0      0      0    NaN  ...   \n",
       "1  5001719     0     0      C      C      C      C      C      C      C  ...   \n",
       "2  5001720     0     0      0      0      0      0      0      0      0  ...   \n",
       "3  5001723     0     0    NaN    NaN    NaN    NaN    NaN    NaN    NaN  ...   \n",
       "4  5001726     0     0      C      C      C      C      C      C      C  ...   \n",
       "\n",
       "  default_mes15 default_mes16 default_mes17 default_mes18 default_mes19  \\\n",
       "0           0.0           NaN           0.0           0.0           0.0   \n",
       "1           0.0           0.0           0.0           0.0           0.0   \n",
       "2           0.0           0.0           0.0           0.0           0.0   \n",
       "3           NaN           NaN           NaN           NaN           NaN   \n",
       "4           0.0           0.0           0.0           0.0           0.0   \n",
       "\n",
       "  default_mes20 default_mes21 default_mes22 default_mes23 default_mes24  \n",
       "0           NaN           NaN           NaN           0.0           NaN  \n",
       "1           0.0           0.0           0.0           0.0           0.0  \n",
       "2           0.0           0.0           0.0           0.0           0.0  \n",
       "3           NaN           NaN           NaN           NaN           NaN  \n",
       "4           0.0           0.0           0.0           0.0           0.0  \n",
       "\n",
       "[5 rows x 51 columns]"
      ]
     },
     "execution_count": 143,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pg.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-18T13:32:42.227105Z",
     "iopub.status.busy": "2024-07-18T13:32:42.226469Z",
     "iopub.status.idle": "2024-07-18T13:32:42.255312Z",
     "shell.execute_reply": "2024-07-18T13:32:42.253422Z",
     "shell.execute_reply.started": "2024-07-18T13:32:42.226980Z"
    }
   },
   "outputs": [],
   "source": [
    "# 2) atribuindo uma coluna dos 'bons' e 'maus' pagadores ao longo de todos os 24 meses de desempenho\n",
    "pg['classificação_pagador'] = np.where(pg.iloc[:,26:50].sum(axis=1) == 0, 'bom pagador','mau pagador')\n",
    "                                                                   \n",
    "                                                        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-18T13:32:45.529488Z",
     "iopub.status.busy": "2024-07-18T13:32:45.529028Z",
     "iopub.status.idle": "2024-07-18T13:32:45.544744Z",
     "shell.execute_reply": "2024-07-18T13:32:45.543480Z",
     "shell.execute_reply.started": "2024-07-18T13:32:45.529443Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "classificação_pagador\n",
       "bom pagador    20515\n",
       "mau pagador      422\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 145,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pg['classificação_pagador'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-18T13:36:21.209994Z",
     "iopub.status.busy": "2024-07-18T13:36:21.209607Z",
     "iopub.status.idle": "2024-07-18T13:36:21.331557Z",
     "shell.execute_reply": "2024-07-18T13:36:21.330431Z",
     "shell.execute_reply.started": "2024-07-18T13:36:21.209964Z"
    }
   },
   "outputs": [],
   "source": [
    "#3) Marcando proponentes expostos ao risco de crédito. Foi feita a junção do Dataframe 'pg' ao dataframe das propostas assim \n",
    "# cada um está sendo marcado como 'bom' ou 'mau' pagador\n",
    "# 4)Consolidando as informações (juntando os dois dataframes)\n",
    "pg_selecao = pg.merge(propostas, on = 'ID', how = 'inner')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-18T13:36:23.754146Z",
     "iopub.status.busy": "2024-07-18T13:36:23.753761Z",
     "iopub.status.idle": "2024-07-18T13:36:23.761351Z",
     "shell.execute_reply": "2024-07-18T13:36:23.760152Z",
     "shell.execute_reply.started": "2024-07-18T13:36:23.754116Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(16650, 69)"
      ]
     },
     "execution_count": 153,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#checando a estrutura do novo dataframe\n",
    "pg_selecao.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-18T13:36:26.389810Z",
     "iopub.status.busy": "2024-07-18T13:36:26.389258Z",
     "iopub.status.idle": "2024-07-18T13:36:26.419146Z",
     "shell.execute_reply": "2024-07-18T13:36:26.417654Z",
     "shell.execute_reply.started": "2024-07-18T13:36:26.389736Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>mes_0</th>\n",
       "      <th>mes_1</th>\n",
       "      <th>mes_10</th>\n",
       "      <th>mes_11</th>\n",
       "      <th>mes_12</th>\n",
       "      <th>mes_13</th>\n",
       "      <th>mes_14</th>\n",
       "      <th>mes_15</th>\n",
       "      <th>mes_16</th>\n",
       "      <th>...</th>\n",
       "      <th>NAME_FAMILY_STATUS</th>\n",
       "      <th>NAME_HOUSING_TYPE</th>\n",
       "      <th>DAYS_BIRTH</th>\n",
       "      <th>DAYS_EMPLOYED</th>\n",
       "      <th>FLAG_MOBIL</th>\n",
       "      <th>FLAG_WORK_PHONE</th>\n",
       "      <th>FLAG_PHONE</th>\n",
       "      <th>FLAG_EMAIL</th>\n",
       "      <th>OCCUPATION_TYPE</th>\n",
       "      <th>CNT_FAM_MEMBERS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5008806</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>Married</td>\n",
       "      <td>House / apartment</td>\n",
       "      <td>-21474</td>\n",
       "      <td>-1134</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Security staff</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5008810</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>...</td>\n",
       "      <td>Single / not married</td>\n",
       "      <td>House / apartment</td>\n",
       "      <td>-19110</td>\n",
       "      <td>-3051</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sales staff</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5008811</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>...</td>\n",
       "      <td>Single / not married</td>\n",
       "      <td>House / apartment</td>\n",
       "      <td>-19110</td>\n",
       "      <td>-3051</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sales staff</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5008825</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>Married</td>\n",
       "      <td>House / apartment</td>\n",
       "      <td>-10669</td>\n",
       "      <td>-1103</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Accountants</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5008826</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>...</td>\n",
       "      <td>Married</td>\n",
       "      <td>House / apartment</td>\n",
       "      <td>-10669</td>\n",
       "      <td>-1103</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Accountants</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 69 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        ID mes_0 mes_1 mes_10 mes_11 mes_12 mes_13 mes_14 mes_15 mes_16  ...  \\\n",
       "0  5008806     0   NaN    NaN    NaN    NaN    NaN    NaN      0    NaN  ...   \n",
       "1  5008810     0   NaN      C      C      C      C      C      C      C  ...   \n",
       "2  5008811     0   NaN      C      C      C      C      C      C      C  ...   \n",
       "3  5008825     0     0      0      0      0      0      0      0      0  ...   \n",
       "4  5008826     0     0      1      1      C      C      C      C      C  ...   \n",
       "\n",
       "     NAME_FAMILY_STATUS  NAME_HOUSING_TYPE DAYS_BIRTH DAYS_EMPLOYED  \\\n",
       "0               Married  House / apartment     -21474         -1134   \n",
       "1  Single / not married  House / apartment     -19110         -3051   \n",
       "2  Single / not married  House / apartment     -19110         -3051   \n",
       "3               Married  House / apartment     -10669         -1103   \n",
       "4               Married  House / apartment     -10669         -1103   \n",
       "\n",
       "  FLAG_MOBIL FLAG_WORK_PHONE FLAG_PHONE FLAG_EMAIL OCCUPATION_TYPE  \\\n",
       "0          1               0          0          0  Security staff   \n",
       "1          1               0          1          1     Sales staff   \n",
       "2          1               0          1          1     Sales staff   \n",
       "3          1               0          0          0     Accountants   \n",
       "4          1               0          0          0     Accountants   \n",
       "\n",
       "  CNT_FAM_MEMBERS  \n",
       "0             2.0  \n",
       "1             1.0  \n",
       "2             1.0  \n",
       "3             2.0  \n",
       "4             2.0  \n",
       "\n",
       "[5 rows x 69 columns]"
      ]
     },
     "execution_count": 154,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pg_selecao.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-18T13:36:29.067940Z",
     "iopub.status.busy": "2024-07-18T13:36:29.067086Z",
     "iopub.status.idle": "2024-07-18T13:36:29.077382Z",
     "shell.execute_reply": "2024-07-18T13:36:29.076038Z",
     "shell.execute_reply.started": "2024-07-18T13:36:29.067896Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['ID', 'mes_0', 'mes_1', 'mes_10', 'mes_11', 'mes_12', 'mes_13',\n",
       "       'mes_14', 'mes_15', 'mes_16', 'mes_17', 'mes_18', 'mes_19', 'mes_2',\n",
       "       'mes_20', 'mes_21', 'mes_22', 'mes_23', 'mes_24', 'mes_3', 'mes_4',\n",
       "       'mes_5', 'mes_6', 'mes_7', 'mes_8', 'mes_9', 'default_mes0',\n",
       "       'default_mes1', 'default_mes2', 'default_mes3', 'default_mes4',\n",
       "       'default_mes5', 'default_mes6', 'default_mes7', 'default_mes8',\n",
       "       'default_mes9', 'default_mes10', 'default_mes11', 'default_mes12',\n",
       "       'default_mes13', 'default_mes14', 'default_mes15', 'default_mes16',\n",
       "       'default_mes17', 'default_mes18', 'default_mes19', 'default_mes20',\n",
       "       'default_mes21', 'default_mes22', 'default_mes23', 'default_mes24',\n",
       "       'classificação_pagador', 'CODE_GENDER', 'FLAG_OWN_CAR',\n",
       "       'FLAG_OWN_REALTY', 'CNT_CHILDREN', 'AMT_INCOME_TOTAL',\n",
       "       'NAME_INCOME_TYPE', 'NAME_EDUCATION_TYPE', 'NAME_FAMILY_STATUS',\n",
       "       'NAME_HOUSING_TYPE', 'DAYS_BIRTH', 'DAYS_EMPLOYED', 'FLAG_MOBIL',\n",
       "       'FLAG_WORK_PHONE', 'FLAG_PHONE', 'FLAG_EMAIL', 'OCCUPATION_TYPE',\n",
       "       'CNT_FAM_MEMBERS'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 155,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pg_selecao.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-18T13:36:36.682947Z",
     "iopub.status.busy": "2024-07-18T13:36:36.682560Z",
     "iopub.status.idle": "2024-07-18T13:36:36.695485Z",
     "shell.execute_reply": "2024-07-18T13:36:36.694339Z",
     "shell.execute_reply.started": "2024-07-18T13:36:36.682907Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "classificação_pagador\n",
       "bom pagador    16268\n",
       "mau pagador      382\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 156,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 5) contagem dos valores default\n",
    "pg_selecao['classificação_pagador'].value_counts()"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 5409867,
     "sourceId": 8983302,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30746,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
